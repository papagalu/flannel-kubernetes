---
- name: Flannel | Download master.zip
  win_get_url:
    url: "{{ download_links.flannel_master_zip }}"
    dest: C:\k\master.zip

- name: Flannel | Copy files
  win_shell: |
    Expand-Archive C:\k\master.zip -DestinationPath C:\k\master
    mv C:\k\master/SDN-master/Kubernetes/flannel/l2bridge/* C:/k/
    rm -recurse -force C:\k\master,C:\k\master.zip

- name: Flannel | Set kubeconfig
  win_environment:
    state: present
    name: 'KUBECONFIG'
    value: 'C:\k\config'
    level: user

- name: Flannel | Copy config
  win_copy:
    src: ~\.kube\config
    dest: C:\k\config
    remote_src: yes

- name: Flannel | Create Dockerfile for kubeletwin\pause image
  win_lineinfile:
    path: "{{ install_path }}/Dockerfile"
    create: yes
    line: |
      FROM {{ docker_images.nanoserver }}
      CMD cmd /c ping -t localhost

- name: Flannel | Prepare kubeletwin\pause image
  win_shell: |
    docker pull "{{ docker_images.1809 }}"
    if (!(docker images "{{ docker_images.nanoserver }}:latest" -q))
    {
        docker tag (docker images {{ docker_images.nanoserver }} -q) {{ docker_images.nanoserver }}
    }

    if (!(docker images "{{ docker_images.servercore }}:latest" -q))
    {
        docker tag (docker images {{ docker_images.servercore }} -q) {{ docker_images.servercore }}
    }
    cd {{ install_path }}
    docker build -t kubeletwin/pause .

- name: Flannel | Download download.ps1
  win_get_url:
    url: "{{ download_links.download_script }}"
    dest: C:\k\download.ps1

- name: Flannel | Start downloads
  win_shell: |
    cd C:\k
    .\download.ps1

- name: Flannel | Create hns network
  win_shell: |
    $ErrorActionPreference = "Stop"
    cd C:\k
    Import-Module C:\k\hns.psm1
    $hnsNetwork = Get-HnsNetwork | ? Name -eq "cbr0"
    if ($hnsNetwork)
    {
        docker ps -q | foreach {docker rm $_ -f} 

        Write-Host "Cleaning up old HNS network found"
        Write-Host ($hnsNetwork | ConvertTo-Json -Depth 10) 
        Remove-HnsNetwork $hnsNetwork
    }
    if(!(Get-HnsNetwork | ? Name -eq "External"))
    {
        New-HNSNetwork -Type L2Bridge -AddressPrefix "192.168.255.0/30" -Gateway "192.168.255.1" -Name "External" -Verbose
    }
  async: 10
  poll: 0

- name: Flannel | Wait for connection
  wait_for_connection:
    delay: 5
    timeout: 60
